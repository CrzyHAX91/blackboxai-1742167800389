version: '3.8'

services:
  web:
    build: .
    restart: always
    environment:
      - FLASK_APP=server.py
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://postgres:${DB_PASSWORD}@db:5432/badbeatstools
      - DOMAIN_NAME=${DOMAIN_NAME}
      - SSL_ENABLED=true
    env_file:
      - .env.prod
    depends_on:
      - db
      - redis
    networks:
      - badbeatstools-network

  db:
    image: postgres:13
    restart: always
    environment:
      - POSTGRES_DB=badbeatstools
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - badbeatstools-network

  redis:
    image: redis:6-alpine
    restart: always
    volumes:
      - redis_data:/data
    networks:
      - badbeatstools-network

  nginx:
    image: nginx:alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.prod.conf:/etc/nginx/conf.d/default.conf:ro
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
      - ./static:/usr/share/nginx/html
    depends_on:
      - web
    networks:
      - badbeatstools-network

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  postgres_data:
  redis_data:

networks:
  badbeatstools-network:
    driver: bridge
